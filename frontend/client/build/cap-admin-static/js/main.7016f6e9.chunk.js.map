{"version":3,"sources":["utils/openAntdNotification.js","views/Login/Login.jsx","views/AdminDashboard/Ambassador.jsx","views/AdminDashboard/Task.jsx","views/AdminDashboard/Leaderboard.jsx","views/AdminDashboard/AdminDashboard.jsx","utils/antd-layouts.js","common/ECellFooter.jsx","utils/getCookieToken.js","common/SpecialRoutes.jsx","App.js","index.js"],"names":["openNotification","type","message","description","notification","placement","duration","Header","Layout","Content","Login","useState","isLoggingIn","setIsLoggingIn","history","useHistory","logIn","values","a","axios","method","url","data","withCredentials","credentials","res","localStorage","setItem","JSON","stringify","push","console","log","errMsg","response","msg","style","background","textAlign","color","className","bordered","name","onFinish","layout","scrollToFirstError","size","Item","label","rules","required","prefix","MailOutlined","placeholder","LockOutlined","span","width","htmlType","loading","Title","Typography","Axios","create","baseURL","titleCase","str","splitStr","toLowerCase","split","i","length","charAt","toUpperCase","substring","join","Ambassador","props","task","ambassador","pointsRef","useRef","points","setPoints","avenues","setAvenues","visible","setVisible","modalAvenue","setModalAvenue","getAvenues","get","params","taskId","_id","ambassadorId","useEffect","handleSubmit","input","post","updatedPoints","exact","path","margin","taskName","level","src","avatarURL","backgroundColor","UserOutlined","collegeName","email","map","avenue","title","extra","onClick","urls","justify","ref","defaultValue","min","current","currentValue","centered","onOk","onCancel","destroyOnClose","height","alt","Task","ambassadors","setAmbassadors","myref","screen","useBreakpoint","setLoading","searchText","searchedColumn","searchState","setSearchState","filteredInfo","sortedInfo","sortState","setSortState","handleChange","pagination","filters","sorter","getColumnSearchProps","dataIndex","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","value","onChange","e","target","onPressEnter","handleSearch","marginBottom","display","icon","SearchOutlined","handleReset","filterIcon","filtered","undefined","onFilter","record","includes","onFilterDropdownVisibleChange","setTimeout","select","render","text","highlightStyle","searchWords","autoEscape","textToHighlight","toString","getAmbassadors","dataSource","avenueList","concat","key","String","columns","indexOf","b","sortOrder","columnKey","order","ellipsis","numOfDocs","to","columnsForMobile","align","md","expandable","expandedRowRender","Leaderboard","sort","rank","fontSize","rowExpandable","AdminDashboard","tasks","setTasks","handleLogout","getTasks","xs","offset","sm","lg","paddingTop","fontFamily","fontWeight","shape","href","HomeOutlined","RocketOutlined","LogoutOutlined","minHeight","ambassadorIds","layouts","halfInLarge","oneFourthInLarge","threeFourthInLarge","oneThirdInLarge","Grid","ECellFooter","developers","developerDetails","developer","Link","profileURL","WhatsAppOutlined","Text","copyable","tooltips","whatsappNum","content","getCookieToken","document","cookie","token","filter","trim","startsWith","PrivateRoute","children","Component","component","redirectTo","rest","isLoggedIn","location","pathname","state","from","PublicRoute","Footer","App","window","boxShadow","marginTop","position","verticalAlign","zIndex","ReactDOM","getElementById"],"mappings":"wYAoBeA,EAXU,SAACC,EAAMC,GAA+B,IAAtBC,EAAqB,uDAAP,GACtC,UAATF,GAA6B,YAATA,GAA+B,YAATA,GAE9CG,IAAaH,GAAM,CACfC,UACAC,cACAE,UAAW,cACXC,SAAmB,UAATL,EAAmB,EAAI,KCLjCM,G,OAAoBC,IAApBD,QAAQE,EAAYD,IAAZC,QA0FDC,EAxFD,WAAO,IAAD,EACsBC,oBAAS,GAD/B,mBACTC,EADS,KACIC,EADJ,KAEVC,EAAUC,cAEVC,EAAK,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACVL,GAAe,GADL,kBAIYM,IAAM,CACpBC,OAAQ,OACRC,IAAK,gDACLC,KAAML,EACNM,iBAAiB,EACjBC,YAAa,YATX,OAIAC,EAJA,OAWNZ,GAAe,GACfa,aAAaC,QAAQ,OAAQC,KAAKC,UAAUJ,EAAIH,KAAKA,OACrDR,EAAQgB,KAAK,0BAbP,kDAeNjB,GAAe,GACfkB,QAAQC,IAAI,QAAZ,MACMC,EAAS,KAAMC,SAAW,KAAMA,SAASZ,KAAKa,IAAM,KAAMjC,QAChEF,EAAiB,QAASiC,GAlBpB,0DAAH,sDAsBX,OACI,qCACI,cAAC1B,EAAD,CAAQ6B,MAAO,CAAEC,WAAY,WAAYC,UAAW,UAApD,SACI,oBAAIF,MAAO,CAAEG,MAAO,WAApB,yCAEJ,cAAC9B,EAAD,CAAS+B,UAAU,kBAAnB,SACI,eAAC,IAAD,CAAMC,UAAU,EAAMD,UAAU,YAAhC,UACI,oBAAIA,UAAU,QAAd,mBACA,eAAC,IAAD,CAAME,KAAK,QAAQC,SAAU3B,EAAO4B,OAAO,WAAWC,oBAAkB,EAACC,KAAK,QAA9E,UACI,cAAC,IAAKC,KAAN,CACIL,KAAK,QACLM,MAAM,SACNC,MAAO,CACH,CACIhD,KAAM,QACNC,QAAS,kCAEb,CACIgD,UAAU,EACVhD,QAAS,8BAVrB,SAaI,cAAC,IAAD,CAAOiD,OAAQ,cAACC,EAAA,EAAD,CAAcZ,UAAU,wBAA0Ba,YAAY,aAEjF,cAAC,IAAKN,KAAN,CACIL,KAAK,WACLM,MAAM,YACNC,MAAO,CACH,CACIC,UAAU,EACVhD,QAAS,gCANrB,SAUI,cAAC,IAAD,CACIiD,OAAQ,cAACG,EAAA,EAAD,CAAcd,UAAU,wBAChCvC,KAAK,WACLoD,YAAY,eAKpB,cAAC,IAAD,UACI,cAAC,IAAD,CAAKE,KAAM,GAAX,SACI,cAAC,IAAKR,KAAN,UACI,cAAC,IAAD,CACIX,MAAO,CAAEoB,MAAO,QAChBvD,KAAK,UACLwD,SAAS,SACTC,QAAS9C,EAJb,qC,0KC3E5B+C,EAAUC,IAAVD,MAEFxC,EAAQ0C,IAAMC,OAAO,CACvBC,QAAS,gCACTxC,iBAAiB,IAGrB,SAASyC,EAAUC,GAEf,IADA,IAAIC,EAAWD,EAAIE,cAAcC,MAAM,KAC9BC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IAGjCH,EAASG,GAAKH,EAASG,GAAGE,OAAO,GAAGC,cAAgBN,EAASG,GAAGI,UAAU,GAG9E,OAAOP,EAASQ,KAAK,KAmKVC,MAhKf,SAAoBC,GAAQ,IAChBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,WACRC,EAAYC,iBAAO,MAFF,EAGKrE,mBAASmE,EAAWG,QAHzB,mBAGhBA,EAHgB,KAGRC,EAHQ,OAIOvE,mBAAS,IAJhB,mBAIhBwE,EAJgB,KAIPC,EAJO,OAKOzE,oBAAS,GALhB,mBAKhB0E,EALgB,KAKPC,EALO,OAMe3E,qBANf,mBAMhB4E,EANgB,KAMHC,EANG,KAQjBC,EAAU,uCAAG,WAAOZ,EAAMC,GAAb,eAAA5D,EAAA,sEACGC,EAAMuE,IAAI,+CAAgD,CACxEC,OAAQ,CAAEC,OAAQf,EAAKgB,IAAKC,aAAchB,EAAWgB,gBAF1C,cACTrE,EADS,gBAIT2D,EAAW3D,EAAIH,KAAKA,MAJX,2CAAH,wDAOhByE,qBAAU,WACNN,EAAWZ,EAAMC,KAElB,IAEH,IAAMkB,EAAY,uCAAG,WAAOC,GAAP,iBAAA/E,EAAA,2DACd+E,EAAQhB,GADM,gBAEbjF,EAAiB,UAAW,0DAFf,sCAOCmB,EAAM+E,KAAK,6DAA8D,CAAEjB,OAAQgB,EAAOH,aAAchB,EAAWgB,eAPpH,OAOXrE,EAPW,OAQX0E,EAAgB1E,EAAIH,KAAKA,KAC/B4D,EAAUiB,GATO,2CAAH,sDAalB,OACI,8BACI,cAAC,IAAD,UACI,cAAC,IAAD,UACI,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,iCAA0BxB,EAAKgB,IAA/B,YAAsCf,EAAWgB,gBAAjD,EAAnB,UACI,eAAC,IAAD,CAAY1D,MAAO,CAAEkE,OAAQ,UAA7B,UACI,cAAC,IAAWvD,KAAZ,mBACA,cAAC,IAAWA,KAAZ,UAAkB8B,EAAK0B,WACvB,cAAC,IAAWxD,KAAZ,UAAkB+B,EAAWpC,UAGjC,sBAAKF,UAAU,sBAAf,UACI,cAACmB,EAAD,CAAO6C,MAAO,EAAd,8BACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAKjD,KAAM,EAAX,SAEI,cAAC,IAAD,CAAQkD,IAAK3B,EAAW4B,UAAWtE,MAAO,CAAEuE,gBAAiB,eAAiB7D,KAAM,GAApF,SACI,cAAC8D,EAAA,EAAD,CAAc9D,KAAM,SAI5B,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAACa,EAAD,CAAO6C,MAAO,EAAd,SACK1B,EAAWpC,SAGpB,cAAC,IAAD,UAEI,cAACiB,EAAD,CAAO6C,MAAO,EAAGpE,MAAO,CAAEG,MAAO,QAAjC,SACKuC,EAAW+B,gBAGpB,cAAC,IAAD,UAEI,cAAClD,EAAD,CAAO6C,MAAO,EAAGpE,MAAO,CAAEG,MAAO,QAAjC,SACKuC,EAAWgC,gBAK5B,cAAC,IAAD,UAEQ3B,EAAQb,OAAUa,EAAQ4B,KAAI,SAAAC,GAAW,IAAD,EACpC,OAAQ,cAAC,IAAD,UACJ,cAAC,KAAD,GAAMC,MAAOjD,EAAUgD,EAAOA,QAAS5E,MAAO,CAAEoB,MAAO,KAAQ0D,MAAO,mBAAGC,QAAO,sBAAE,sBAAAjG,EAAA,sEACxEsE,EAAewB,GADyD,OAE9E1B,GAAW,GAFmE,2CAAZ,+BAAtE,sBAGiC,CAAE9B,MAAO,MAH1C,yBAII,eAAC,IAAD,WACI,cAAC,IAAD,CAAKD,KAAM,GAAX,iCAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACKyD,EAAOI,KAAK9C,aATzB,SAeF,eAAC,IAAD,CAAK+C,QAAQ,SAAb,UACE,cAAC,IAAD,IACA,cAAC,IAAD,CAAMvE,KAAK,eAI3B,cAAC,IAAD,IACA,cAAC,IAAD,CAAKuE,QAAQ,SAAb,SACI,eAAC1D,EAAD,CAAO6C,MAAO,EAAd,6BAAkCvB,OAEtC,cAAC,IAAD,CAAKoC,QAAQ,SAAb,SACI,eAAC,IAAD,CACIzE,OAAO,aADX,UAGI,eAAC,IAAKG,KAAN,WACI,cAAC,IAAD,CAAKsE,QAAQ,SAAb,SACI,cAAC1D,EAAD,CAAO6C,MAAO,EAAd,8BAGJ,cAAC,IAAD,CAAKa,QAAQ,SAAb,SACI,cAAC,IAAD,CAAaC,IAAKvC,EAAWwC,aAActC,EAAQuC,IAAKvC,SAIhE,cAAC,IAAKlC,KAAN,UACI,cAAC,IAAD,CAAKsE,QAAQ,SAAb,SACI,cAAC,IAAD,CAAQpH,KAAK,UAAUkH,QAAS,kBAAMnB,EAAajB,EAAU0C,QAAQC,eAArE,6BAKhB,cAAC,IAAD,CACIT,MAAM,cACNU,UAAQ,EACRtC,QAASA,EACTuC,KAAM,kBAAMtC,GAAW,IACvBuC,SAAU,kBAAMvC,GAAW,IAC3B9B,MAAO,IACPsE,gBAAgB,EAPpB,SAYQvC,EAAcA,EAAY6B,KAAKL,KAAI,SAAA1F,GAC/B,OAAO,qBAAKe,MAAO,CAAE2F,OAAQ,KAAMpB,gBAAiB,UAA7C,SACH,wBACIqB,IAAK3G,EACLmC,MAAM,OACNuE,OAAO,OACPtB,IAAKpF,SAKZ,oB,oCC/JjCsC,GAAUC,IAAVD,MAEFxC,GAAQ0C,IAAMC,OAAO,CACzBC,QAAS,gCACTxC,iBAAiB,IAySJ0G,OArSf,SAAcrD,GAAQ,IAAD,EACmBjE,mBAAS,IAD5B,mBACZuH,EADY,KACCC,EADD,KAEbC,EAAQpD,iBAAO,MACfqD,EAASC,OAHI,EAIW3H,oBAAS,GAJpB,mBAIZ+C,EAJY,KAIH6E,EAJG,OAKmB5H,mBAAS,CAC7C6H,WAAY,GACZC,eAAgB,KAPC,mBAKZC,EALY,KAKCC,EALD,OAUehI,mBAAS,CACzCiI,aAAc,KACdC,WAAY,OAZK,mBAUZC,EAVY,KAUDC,EAVC,KAebC,EAAe,SAACC,EAAYC,EAASC,GACzCpH,QAAQC,IAAI,qBAAsBiH,EAAYC,EAASC,GACvDJ,EAAa,2BACRD,GADO,IAGVD,WAAYM,MAIVC,EAAuB,SAAAC,GAAS,MAAK,CACzCC,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,aAA3C,OACd,sBAAKtH,MAAO,CAAEuH,QAAS,GAAvB,UACE,cAAC,IAAD,CACErC,IAAKc,EACL/E,YAAW,iBAAYgG,GACvBO,MAAOJ,EAAa,GACpBK,SAAU,SAAAC,GAAC,OAAIP,EAAgBO,EAAEC,OAAOH,MAAQ,CAACE,EAAEC,OAAOH,OAAS,KACnEI,aAAc,kBAAMC,EAAaT,EAAcC,EAASJ,IACxDjH,MAAO,CAAEoB,MAAO,IAAK0G,aAAc,EAAGC,QAAS,WAEjD,eAAC,IAAD,WACE,cAAC,IAAD,CACElK,KAAK,UACLkH,QAAS,kBAAM8C,EAAaT,EAAcC,EAASJ,IACnDe,KAAM,cAACC,EAAA,EAAD,IACNvH,KAAK,QACLV,MAAO,CAAEoB,MAAO,IALlB,oBASA,cAAC,IAAD,CAAQ2D,QAAS,kBAAMmD,EAAYZ,IAAe5G,KAAK,QAAQV,MAAO,CAAEoB,MAAO,IAA/E,0BAMN+G,WAAY,SAAAC,GAAQ,OAAI,cAACH,EAAA,EAAD,CAAgBjI,MAAO,CAAEG,MAAOiI,EAAW,eAAYC,MAC/EC,SAAU,SAACd,EAAOe,GAChB,OAAOA,EAAOtB,GACVsB,EAAOjI,KAAKyB,cAAcyG,SAAShB,EAAMzF,eACzC,IAEN0G,8BAA+B,SAAAxF,GACzBA,GACFyF,YAAW,kBAAM1C,EAAMX,QAAQsD,WAAU,MAG7CC,OAAQ,SAAAC,GAAI,OACVvC,EAAYD,iBAAmBY,EAC7B,cAAC,IAAD,CACE6B,eAAgB,CAAEvE,gBAAiB,UAAWgD,QAAS,GACvDwB,YAAa,CAACzC,EAAYF,YAC1B4C,YAAU,EACVC,gBAAiBJ,EAAOA,EAAKK,WAAa,KAG1CL,KAIFhB,EAAe,SAACT,EAAcC,EAASJ,GAC3CI,IACAd,EAAe,CACbH,WAAYgB,EAAa,GACzBf,eAAgBY,KAIdiB,EAAc,SAAAZ,GAClBA,IACAf,EAAe,CAAEH,WAAY,MAEvB3D,EAASD,EAATC,KAGF0G,EAAc,uCAAG,WAAO1G,GAAP,eAAA3D,EAAA,6DACrBqH,GAAW,GADU,SAEHpH,GAAMuE,IAAI,oCAAqC,CAC/DC,OAAQ,CAAEC,OAAQf,EAAKgB,OAHJ,cAEfpE,EAFe,gBAKf0G,EAAe1G,EAAIH,KAAKA,MALT,OAMrBiH,GAAW,GANU,2CAAH,sDASpBxC,qBAAU,WACRwF,EAAe1G,KACd,IAEH,IAAIR,EAAI,EACJmH,EAAatD,EAAcA,EAAYnB,KAAI,SAAAjC,GAC7C,GAAIA,EAAY,CACdT,IACA,IAAIoH,EAAa,GACI3G,GAAaA,EAAWK,QAAQ4B,KAAI,SAAAC,GACvDyE,EAAaA,EAAWC,OAoG9B,SAAmBzH,GAEjB,IADA,IAAIC,EAAWD,EAAIE,cAAcC,MAAM,KAC9BC,EAAI,EAAGA,EAAIH,EAASI,OAAQD,IAGnCH,EAASG,GAAKH,EAASG,GAAGE,OAAO,GAAGC,cAAgBN,EAASG,GAAGI,UAAU,GAG5E,OAAOP,EAASQ,KAAK,KA5GcV,CAAUgD,GAAS,QAEpD,OAAO,2BAAKlC,GAAZ,IAAwB6G,IAAKC,OAAOvH,GAAIoH,WAAY3G,EAAa2G,EAAa,SAG7E,GAGC5C,EAA6BC,EAA7BD,WAAYD,EAAiBE,EAAjBF,aAClBC,EAAaA,GAAc,GAC3BD,EAAeA,GAAgB,GAC/B,IAAMiD,EAAU,CACd,CACE5E,MAAO,GAEP0E,IAAK,YACLX,OAAQ,SAACC,EAAMnG,GAAP,OACN,cAAC,IAAD,CAAOhC,KAAK,QAAZ,SACE,cAAC,IAAD,CAAQ2D,IAAK3B,EAAW4B,UAAWtE,MAAO,CAAEuE,gBAAiB,SAA7D,SACE,cAACC,EAAA,EAAD,UARM,aAcZK,MAAO,OACPoC,UAAW,OACXsC,IAAK,QAEFvC,EAAqB,SAG1B,CACEnC,MAAO,SACPoC,UAAW,aACXsC,IAAK,aACLzC,QAAS,CACP,CAAE+B,KAAM,WAAYrB,MAAO,YAC3B,CAAEqB,KAAM,WAAYrB,MAAO,YAC3B,CAAEqB,KAAM,YAAarB,MAAO,aAC5B,CAAEqB,KAAM,QAASrB,MAAO,SACxB,CAAEqB,KAAM,SAAUrB,MAAO,WAE3Bc,SAAU,SAACd,EAAOe,GAAR,OAAwD,IAArCA,EAAOc,WAAWK,QAAQlC,KAEzD,CACE3C,MAAO,SACPoC,UAAW,SACXsC,IAAK,SACLxC,OAAQ,SAACjI,EAAG6K,GAAJ,OAAU7K,EAAE+D,OAAS8G,EAAE9G,QAC/B+G,UAAoC,WAAzBnD,EAAWoD,WAA0BpD,EAAWqD,MAC3DC,UAAU,GAGZ,CACElF,MAAO,cACPoC,UAAW,YACXsC,IAAK,YACLxC,OAAQ,SAACjI,EAAG6K,GAAJ,OAAU7K,EAAEkL,UAAYL,EAAEK,WAClCJ,UAAoC,cAAzBnD,EAAWoD,WAA6BpD,EAAWqD,MAC9DC,UAAU,GAEZ,CACElF,MAAO,SACP0E,IAAK,SACLX,OAAQ,SAACC,EAAMnG,GAAP,OACN,cAAC,IAAD,CAAOhC,KAAK,SAAZ,SACE,cAAC,IAAD,CAAMuJ,GAAE,iCAA4BxH,EAAKgB,IAAjC,YAAwCf,EAAWgB,cAA3D,mCAMFwG,EAAmB,CAAC,yBAEtBrF,MAAO,OACPoC,UAAW,OACXsC,IAAK,QACFvC,EAAqB,SALH,IAMrB4B,OAAQ,SAACC,EAAMnG,GAAP,OACN,cAAC,IAAD,CAAOhC,KAAK,SAAZ,SACE,cAAC,IAAD,CAAMuJ,GAAE,iCAA4BxH,EAAKgB,IAAjC,YAAwCf,EAAWgB,cAA3D,SAA4EhB,EAAWpC,UAE3Fc,MAAO,IACP+I,MAAO,WAET,CACEtF,MAAO,cACPoC,UAAW,YACXsC,IAAK,YACLxC,OAAQ,SAACjI,EAAG6K,GAAJ,OAAU7K,EAAEkL,UAAYL,EAAEK,WAClCJ,UAAoC,cAAzBnD,EAAWoD,WAA6BpD,EAAWqD,MAC9DC,UAAU,EACV3I,MAAO,GACP+I,MAAO,WAiBX,OACE,8BACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOnG,OAAK,EAACC,KAAM,iCAA0BxB,EAAKgB,OAA/B,EAAnB,UACE,eAAC,IAAD,CAAYzD,MAAO,CAAEkE,OAAQ,UAA7B,UACE,cAAC,IAAWvD,KAAZ,mBACA,cAAC,IAAWA,KAAZ,UAAkB8B,EAAK0B,cAEzB,sBAAK/D,UAAU,sBAAf,UACE,eAAC,GAAD,CAAOgE,MAAO,EAAd,uDAA4D3B,EAAK0B,SAAjE,OACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAKhD,KAAM,GAAX,SAEI8E,EAAOmE,GAAK,cAAC,IAAD,CAAO9I,QAASA,EAAS8H,WAAYA,EAAYK,QAASA,EAAShC,SAAUb,EAAcyD,WAAY,CACjHC,kBAAoB,SAAA5H,GAClB,OAAO,eAAC,IAAD,WACL,cAAC,IAAD,CAAKvB,KAAM,GAAX,SACE,cAAC,IAAD,CAAQkD,IAAK3B,EAAW4B,UAAWtE,MAAO,CAAEuE,gBAAiB,eAAiB7D,KAAM,GAApF,SACE,cAAC8D,EAAA,EAAD,CAAc9D,KAAM,SAGxB,eAAC,IAAD,WACE,cAAC,IAAD,UACE,cAAC,GAAD,CAAO0D,MAAO,EAAd,SACG1B,EAAWpC,SAGhB,cAAC,IAAD,UACE,cAAC,GAAD,CAAO8D,MAAO,EAAGpE,MAAO,CAAEG,MAAO,QAAjC,SACGuC,EAAW+B,gBAGhB,cAAC,IAAD,UACE,cAAC,GAAD,CAAOL,MAAO,EAAGpE,MAAO,CAAEG,MAAO,QAAjC,SACGuC,EAAWgC,kBAQrBhE,KAAK,UAEN,cAAC,IAAD,CAAO0I,WAAYA,EAAYK,QAASS,EAAkBzC,SAAUb,EACnElG,KAAK,oBAOhBoF,EAAY5D,OAAU4D,EAAYnB,KAAI,SAAAjC,GAEpC,GAAIA,EACF,OACE,cAAC,IAAD,CAAOuB,KAAM,iCAA0BxB,EAAKgB,IAA/B,YAAsCf,EAAWgB,gBAAjD,EAAb,SACE,cAAC,EAAD,CAAYjB,KAAMA,EAAMC,WAAYA,SAItC,eAAC,IAAD,CAAKuC,QAAQ,SAAb,UACF,cAAC,IAAD,IACA,cAAC,IAAD,CAAMvE,KAAK,qB,UCtSnBa,GAAUC,IAAVD,MACFxC,GAAQ0C,IAAMC,OAAO,CACvBC,QAAS,gCACTxC,iBAAiB,IAiWNoL,OA7Vf,WAAwB,IAAD,EACmBhM,mBAAS,IAD5B,mBACZuH,EADY,KACCC,EADD,KAEbC,EAAQpD,iBAAO,MACfqD,EAASC,OAHI,EAIW3H,oBAAS,GAJpB,mBAIZ+C,EAJY,KAIH6E,EAJG,OAKmB5H,mBAAS,CAC3C6H,WAAY,GACZC,eAAgB,KAPD,mBAKZC,EALY,KAKCC,EALD,OAWehI,mBAAS,CACvCiI,aAAc,KACdC,WAAY,OAbG,mBAWZC,EAXY,KAWDC,EAXC,KAgBbC,EAAe,SAACC,EAAYC,EAASC,GACvCpH,QAAQC,IAAI,qBAAsBiH,EAAYC,EAASC,GACvDJ,EAAa,2BACND,GADK,IAGRD,WAAYM,MAOdC,EAAuB,SAAAC,GAAS,MAAK,CACvCC,eAAgB,gBAAGC,EAAH,EAAGA,gBAAiBC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,QAASC,EAA3C,EAA2CA,aAA3C,OACZ,sBAAKtH,MAAO,CAAEuH,QAAS,GAAvB,UACI,cAAC,IAAD,CACIrC,IAAKc,EACL/E,YAAW,iBAAYgG,GACvBO,MAAOJ,EAAa,GACpBK,SAAU,SAAAC,GAAC,OAAIP,EAAgBO,EAAEC,OAAOH,MAAQ,CAACE,EAAEC,OAAOH,OAAS,KACnEI,aAAc,kBAAMC,EAAaT,EAAcC,EAASJ,IACxDjH,MAAO,CAAEoB,MAAO,IAAK0G,aAAc,EAAGC,QAAS,WAEnD,eAAC,IAAD,WACI,cAAC,IAAD,CACIlK,KAAK,UACLkH,QAAS,kBAAM8C,EAAaT,EAAcC,EAASJ,IACnDe,KAAM,cAACC,EAAA,EAAD,IACNvH,KAAK,QACLV,MAAO,CAAEoB,MAAO,IALpB,oBASA,cAAC,IAAD,CAAQ2D,QAAS,kBAAMmD,EAAYZ,IAAe5G,KAAK,QAAQV,MAAO,CAAEoB,MAAO,IAA/E,0BAMZ+G,WAAY,SAAAC,GAAQ,OAAI,cAACH,EAAA,EAAD,CAAgBjI,MAAO,CAAEG,MAAOiI,EAAW,eAAYC,MAC/EC,SAAU,SAACd,EAAOe,GACd,OAAOA,EAAOtB,GACRsB,EAAOtB,GAAWlF,cAAcyG,SAAShB,EAAMzF,eAC/C,IAEV0G,8BAA+B,SAAAxF,GACvBA,GACAyF,YAAW,kBAAM1C,EAAMX,QAAQsD,WAAU,MAGjDC,OAAQ,SAAAC,GAAI,OACRvC,EAAYD,iBAAmBY,EAC3B,cAAC,IAAD,CACI6B,eAAgB,CAAEvE,gBAAiB,UAAWgD,QAAS,GACvDwB,YAAa,CAACzC,EAAYF,YAC1B4C,YAAU,EACVC,gBAAiBJ,EAAOA,EAAKK,WAAa,KAG1CL,KAIVhB,EAAe,SAACT,EAAcC,EAASJ,GACzCI,IACAd,EAAe,CACXH,WAAYgB,EAAa,GACzBf,eAAgBY,KAIlBiB,EAAc,SAAAZ,GAChBA,IACAf,EAAe,CAAEH,WAAY,MAG3B+C,EAAc,uCAAG,WAAO1G,GAAP,eAAA3D,EAAA,6DACnBqH,GAAW,GADQ,SAEDpH,GAAMuE,IAAI,oCAFT,cAEbjE,EAFa,gBAGb0G,EAAe1G,EAAIH,KAAKA,MAHX,OAInBiH,GAAW,GAJQ,2CAAH,sDAOpBxC,qBAAU,WACNwF,MAGD,IAEH,IACMC,EADoB,aAAItD,GAAa0E,MAAK,SAAC1L,EAAG6K,GAAJ,OAAUA,EAAE9G,OAAS/D,EAAE+D,UAClC8B,KAAI,SAACjC,EAAYT,GAAb,mBAAC,eAAwBS,GAAzB,IAAqC+H,KAAMxI,EAAI,OAElFwE,EAA6BC,EAA7BD,WAAYD,EAAiBE,EAAjBF,aAElBA,EAAeA,GAAgB,GAC/B,IAAMiD,EAAU,CAEZ,CACI5E,MAAO,GAEP0E,IAAK,YACLnI,MAAO,MACPwH,OAAQ,SAACC,EAAMnG,GAAP,OACJ,cAAC,IAAD,CAAOhC,KAAK,QAAZ,SACI,cAAC,IAAD,CAAQ2D,IAAK3B,EAAW4B,UAAWtE,MAAO,CAAEuE,gBAAiB,SAA7D,SACI,cAACC,EAAA,EAAD,UAMhB,CACIK,MAAO,OACPoC,UAAW,OACXsC,IAAK,OACLnI,MAAO,MACP2F,OAAQ,SAACjI,EAAG6K,GAAJ,OAAU7K,EAAE2L,KAAOd,EAAEc,MAC7Bb,UAAoC,YAxB5CnD,EAAaA,GAAc,IAwBGoD,WAA0BpD,EAAWqD,MAC3DC,UAAU,GAvBF,aA2BRlF,MAAO,OACPoC,UAAW,OACXsC,IAAK,OACLnI,MAAO,OACJ4F,EAAqB,SA/BhB,yBAkCRnC,MAAO,QACPoC,UAAW,QACXsC,IAAK,SACFvC,EAAqB,UArChB,IAuCR5F,MAAO,MACP+I,MAAO,WAxCC,yBA2CRtF,MAAO,cACPoC,UAAW,cACXsC,IAAK,eACFvC,EAAqB,gBA9ChB,IAgDR5F,MAAO,MACP+I,MAAO,WAGX,CACItF,MAAO,SACPoC,UAAW,SACXsC,IAAK,SACLxC,OAAQ,SAACjI,EAAG6K,GAAJ,OAAU7K,EAAE+D,OAAS8G,EAAE9G,QAC/B+G,UAAoC,WAAzBnD,EAAWoD,WAA0BpD,EAAWqD,MAC3D1I,MAAO,MACP2I,UAAU,IAKZG,EAAmB,CAErB,CACIrF,MAAO,OACPoC,UAAW,OACXsC,IAAK,OACLnI,MAAO,MACP2F,OAAQ,SAACjI,EAAG6K,GAAJ,OAAU7K,EAAE2L,KAAOd,EAAEc,MAC7Bb,UAAoC,WAAzBnD,EAAWoD,WAA0BpD,EAAWqD,MAC3DC,UAAU,EACVI,MAAO,UAVU,yBAejBtF,MAAO,OACPoC,UAAW,OACXsC,IAAK,QACFvC,EAAqB,SAlBP,IAoBjB5F,MAAO,MACP+I,MAAO,WAGX,CACItF,MAAO,SACPoC,UAAW,SACXsC,IAAK,SACLxC,OAAQ,SAACjI,EAAG6K,GAAJ,OAAU7K,EAAE+D,OAAS8G,EAAE9G,QAC/B+G,UAAoC,WAAzBnD,EAAWoD,WAA0BpD,EAAWqD,MAC3DC,UAAU,EACV3I,MAAO,MACP+I,MAAO,WAKf,OACI,8BAEI,cAAC,IAAD,UAEI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOnG,OAAK,EAACC,KAAM,qCAAnB,SAEI,sBAAK7D,UAAU,sBAAf,UACI,cAAC,GAAD,CAAOgE,MAAO,EAAd,0BAGA,cAAC,IAAD,UACI,cAAC,IAAD,CAAKjD,KAAM,GAAX,SAEQ8E,EAAOmE,GAAK,cAAC,IAAD,CAAO9I,QAASA,EAAS8H,WAAYA,EAAYK,QAASA,EAAShC,SAAUb,EAAcyD,WAAY,CAC/GC,kBAAoB,SAAA5H,GAChB,OAAO,eAAC,IAAD,WACH,cAAC,IAAD,CAAKvB,KAAM,GAAX,SAEI,cAAC,IAAD,CAAQkD,IAAK3B,EAAW4B,UAAWtE,MAAO,CAAEuE,gBAAiB,eAAiB7D,KAAM,GAApF,SACI,cAAC8D,EAAA,EAAD,CAAc9D,KAAM,SAI5B,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,GAAD,CAAO0D,MAAO,EAAd,SACK1B,EAAWpC,SAGpB,cAAC,IAAD,UAEI,cAAC,GAAD,CAAO8D,MAAO,EAAGpE,MAAO,CAAEG,MAAO,QAAjC,SACKuC,EAAW+B,gBAGpB,cAAC,IAAD,UAEI,cAAC,GAAD,CAAOL,MAAO,EAAGpE,MAAO,CAAEG,MAAO,QAAjC,SACKuC,EAAWgC,kBAUjChE,KAAK,UAEJuF,EAAOmE,GAAK,cAAC,IAAD,CAAOhB,WAAYA,EAAYK,QAASS,EAAkBzC,SAAUb,EAC5EyD,WAAY,CACRC,kBAAoB,SAAA5H,GAChB,OAAO,eAAC,IAAD,WACH,cAAC,IAAD,CAAKvB,KAAM,GAAX,SAEI,cAAC,IAAD,CAAQkD,IAAK3B,EAAW4B,UAAWtE,MAAO,CAAEuE,gBAAiB,eAAiB7D,KAAM,GAApF,SACI,cAAC8D,EAAA,EAAD,QAIR,eAAC,IAAD,WACI,cAAC,IAAD,UACI,cAAC,GAAD,CAAOJ,MAAO,EAAd,SACK1B,EAAWpC,SAGpB,cAAC,IAAD,UAEI,cAAC,GAAD,CAAO8D,MAAO,EAAGpE,MAAO,CAAEG,MAAO,QAAjC,SACKuC,EAAW+B,gBAGpB,cAAC,IAAD,UAEI,cAAC,GAAD,CAAOL,MAAO,EAAGpE,MAAO,CAAEG,MAAO,QAAjC,SACKuC,EAAWgC,kBAapChE,KAAK,UACL,cAAC,IAAD,CAAO0I,WAAYA,EAAYK,QAASS,EAAkBzC,SAAUb,EAChEyD,WAAY,CACRjJ,MAAO,KACPkJ,kBAAoB,SAAA5H,GAChB,OAAO,cAAC,IAAD,UACH,eAAC,IAAD,WAEI,cAAC,IAAD,UAEI,cAAC,GAAD,CAAO0B,MAAO,EAAGpE,MAAO,CAAEG,MAAO,OAAQuK,SAAU,IAAnD,SACKhI,EAAW+B,gBAGpB,cAAC,IAAD,UAEI,cAAC,GAAD,CAAOL,MAAO,EAAGpE,MAAO,CAAEG,MAAO,OAAQuK,SAAU,IAAnD,SACKhI,EAAWgC,gBAOhCiG,cAAe,SAAAjI,GAAU,MAAwB,mBAApBA,EAAWpC,OAE5CI,KAAK,0BCjVjDa,GAAUC,IAAVD,MAEFxC,GAAQ0C,IAAMC,OAAO,CACzBC,QAAS,gCACTxC,iBAAiB,IAGXhB,GAAoBC,IAApBD,OAAQE,GAAYD,IAAZC,QAwHDuM,OAtHf,WACE,IAAMlM,EAAUC,cADQ,EAEEJ,mBAAS,IAFX,mBAEjBsM,EAFiB,KAEVC,EAFU,KAIlBC,EAAY,uCAAG,4BAAAjM,EAAA,sEAEjBa,QAAQC,IAAI,UAFK,SAGXb,GAAMuE,IAAI,0BAA2B,CAAEnE,iBAAiB,IAH7C,OAIjBT,EAAQgB,KAAK,sBAJI,gDAMXG,EAAS,KAAMC,SAAW,KAAMA,SAASZ,KAAKa,IAAM,KAAMjC,QAChEF,EAAiB,QAASiC,GAPT,yDAAH,qDAWZmL,EAAQ,uCAAG,4BAAAlM,EAAA,sEACGC,GAAMuE,IAAI,yBAA0B,CAAEnE,iBAAiB,EAAMC,YAAa,YAD7E,cACTC,EADS,gBAETyL,EAASzL,EAAIH,KAAKA,MAFT,2CAAH,qDAUd,OAJAyE,qBAAU,WACRqH,MACC,IAGD,8BACE,eAAC,IAAD,CAAQ5K,UAAU,SAAlB,UACE,eAAC,GAAD,WACE,qBAAKA,UAAU,SACf,eAAC,IAAD,WACE,cAAC,IAAD,CACE6K,GAAI,CAAE9J,KAAM,EAAG+J,OAAQ,GACvBC,GAAI,CAAEhK,KAAM,GAAI+J,OAAQ,GACxBd,GAAI,CAAEjJ,KAAM,GAAI+J,OAAQ,GACxBE,GAAI,CAAEjK,KAAM,GAAI+J,OAAQ,GAJ1B,SAKE,cAAC,GAAD,CACElL,MAAO,CACLqL,WAAY,GACZlL,MAAO,QACPD,UAAW,OACXwK,SAAU,GACVY,WAAY,SACZC,WAAY,IAPhB,mBAYF,eAAC,IAAD,WACE,cAAC,IAAD,CAAQ1N,KAAK,UAAU2N,MAAM,SAAS9K,KAAK,QAA3C,SAAoD,mBAAG+K,KAAK,yBAAR,SAAiC,cAACC,EAAA,EAAD,QADvF,IAGA,cAAC,IAAD,CAAQ7N,KAAK,UAAU2N,MAAM,SAAS9K,KAAK,QAA3C,SAAoD,mBAAG+K,KAAK,qCAAR,SAA6C,cAACE,EAAA,EAAD,QAHjG,IAKA,cAAC,IAAD,CAAQ9N,KAAK,UAAU2N,MAAM,SAAS9K,KAAK,QAA3C,SAAoD,cAACkL,EAAA,EAAD,CAAgB7G,QAASgG,eAKjF,cAAC,GAAD,CAAS/K,MAAO,CAAEuH,QAAS,SAAUsE,UAAW,KAAhD,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAO7H,OAAK,EAACC,KAAM,0BAAnB,UACE,cAAC,IAAD,CAAYjE,MAAO,CAAEkE,OAAQ,UAA7B,SACE,cAAC,IAAWvD,KAAZ,qBAEF,sBAAKP,UAAU,sBAAf,UACE,cAAC,GAAD,oBACA,cAAC,IAAD,UAEIyK,EAAM3I,OAAU2I,EAAMlG,KAAI,SAAAlC,GACxB,OAAQ,8BAAK,cAAC,IAAD,UACX,cAAC,IAAD,CAAMoC,MAAOpC,EAAK0B,SAAUW,MAAO,cAAC,IAAD,CAAMmF,GAAE,iCAA4BxH,EAAKgB,KAAzC,wBAAmEzD,MAAO,CAAEoB,MAAO,KAAtH,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKD,KAAM,GAAX,iCAGA,cAAC,IAAD,CAAKA,KAAM,EAAX,SACGsB,EAAKqJ,cAAc5J,qBAMxB,eAAC,IAAD,CAAK+C,QAAQ,SAAb,UACF,cAAC,IAAD,IACA,cAAC,IAAD,CAAMvE,KAAK,qBAUrBmK,EAAM3I,OAAU2I,EAAMlG,KAAI,SAAAlC,GACxB,OACE,cAAC,IAAD,CAAOwB,KAAI,iCAA4BxB,EAAKgB,KAA5C,SACE,cAAC,GAAD,CAAMhB,KAAMA,SAGZ,eAAC,IAAD,CAAKwC,QAAQ,SAAb,UACF,cAAC,IAAD,IACA,cAAC,IAAD,CAAMvE,KAAK,aAGjB,cAAC,IAAD,CAAOsD,OAAK,EAACC,KAAK,qCAAlB,SAEE,cAAC,GAAD,mB,8BCtGD8H,GA3BC,CACZC,YAAa,CACTf,GAAI,CAAE9J,KAAM,IACZgK,GAAI,CAAEhK,KAAM,IACZiJ,GAAI,CAAEjJ,KAAM,IACZiK,GAAI,CAAEjK,KAAM,KAEhB8K,iBAAkB,CACdhB,GAAI,CAAE9J,KAAM,IACZgK,GAAI,CAAEhK,KAAM,IACZiJ,GAAI,CAAEjJ,KAAM,GACZiK,GAAI,CAAEjK,KAAM,IAEhB+K,mBAAoB,CAChBjB,GAAI,CAAE9J,KAAM,IACZgK,GAAI,CAAEhK,KAAM,IACZiJ,GAAI,CAAEjJ,KAAM,IACZiK,GAAI,CAAEjK,KAAM,KAEhBgL,gBAAiB,CACblB,GAAI,CAAE9J,KAAM,IACZgK,GAAI,CAAEhK,KAAM,IACZiJ,GAAI,CAAEjJ,KAAM,GACZiK,GAAI,CAAEjK,KAAM,KClBZ+E,GAAkBkG,KAAlBlG,cAgDOmG,GA9CK,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACbrG,EAASC,KACTqG,EACF,8BACKD,EAAW3H,KAAI,SAAC6H,GAAD,OACZ,gCACI,cAAC,IAAWC,KAAZ,CAAiBhB,KAAMe,EAAUE,WAAY/E,OAAO,QAApD,SACK6E,EAAUlM,OACI,IACnB,cAACqM,GAAA,EAAD,IAJJ,KAI2B,IACvB,cAAC,IAAWC,KAAZ,CAAiBC,SAAU,CAAEC,UAAU,GAAvC,SAAiDN,EAAUO,gBALrDP,EAAUO,kBAUhC,OACI,eAAC,IAAD,WACI,cAAC,IAAD,2BACQhB,GAAQE,kBADhB,IAEIf,SAAe,OAANjF,QAAM,IAANA,OAAA,EAAAA,EAAQmE,MAAR,OAAcnE,QAAd,IAAcA,OAAd,EAAcA,EAAQmF,MAAO,EACtCpL,SAAe,OAANiG,QAAM,IAANA,OAAA,EAAAA,EAAQmF,MAAR,OAAcnF,QAAd,IAAcA,OAAd,EAAcA,EAAQmE,MAAO,CAAElK,UAAW,UAHvD,SAII,uDACgC,OAAN+F,QAAM,IAANA,OAAA,EAAAA,EAAQmF,MAAR,OAAcnF,QAAd,IAAcA,OAAd,EAAcA,EAAQmE,MAAO,uBACnD,2EACA,uBAHJ,gCAQK,OAANnE,QAAM,IAANA,OAAA,EAAAA,EAAQmF,MAAR,OAAcnF,QAAd,IAAcA,OAAd,EAAcA,EAAQmE,MAAO,cAAC,IAAD,IAEhC,cAAC,IAAD,2BACQ2B,GAAQE,kBADhB,IAEIf,SAAe,OAANjF,QAAM,IAANA,OAAA,EAAAA,EAAQmE,MAAR,OAAcnE,QAAd,IAAcA,OAAd,EAAcA,EAAQmF,MAAO,EACtCpL,SAAe,OAANiG,QAAM,IAANA,OAAA,EAAAA,EAAQmF,MAAR,OAAcnF,QAAd,IAAcA,OAAd,EAAcA,EAAQmE,MAAO,CAAElK,UAAW,UAHvD,SAII,gCACI,uEACA,cAAC,KAAD,CAAS8M,QAAST,EAAlB,SACI,cAAC,IAAWE,KAAZ,sC,mBC/BTQ,GAdQ,WAEnB,IAAKC,SAASC,OAAQ,OAAO,KAE7B,IAAMC,EAAQF,SAASC,OAClBnL,MAAM,KACNqL,QAAO,SAACxL,GAAD,OAASA,EAAIyL,OAAOC,WAAW,0BAAwB,GAEnE,OAAKH,EAEYA,EAAMpL,MAAM,KAAK,GAFf,MCLjBwL,GAAe,SAAChL,GAAW,IACrBiL,EAAwDjL,EAAxDiL,SAAqBC,EAAmClL,EAA9CmL,UAAsBC,EAAwBpL,EAAxBoL,WAAeC,EAD3B,aACoCrL,EADpC,uCAGtBsL,EAA0B,SADfb,KAGjB,OACI,cAAC,IAAD,2BACQY,GADR,IAEIjF,OAAQ,YAAmB,IAAhBmF,EAAe,EAAfA,SACP,OAAID,EACOL,GAAY,cAACC,EAAD,IAGf,cAAC,IAAD,CACIzD,GAAI,CACA+D,SAAUJ,EACVK,MAAO,CAAEC,KAAMH,WAUzCI,GAAc,SAAC3L,GAAW,IACpBiL,EAA4CjL,EAA5CiL,SAAqBC,EAAuBlL,EAAlCmL,UAAyBE,EADhB,aACyBrL,EADzB,0BAGrBsL,EAA0B,YADfb,KAGjB,OACI,cAAC,IAAD,2BACQY,GADR,IAEIjF,OAAQ,WACJ,OAAIkF,EACO,cAAC,IAAD,CAAU7D,GAAG,qBAEbwD,GAAY,cAACC,EAAD,SC9B/BU,GAAWhQ,IAAXgQ,OAiDOC,GA/CH,WACR,OACI,eAAC,IAAD,CAAQjO,UAAU,MAAlB,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WAEI,cAAC,GAAD,CAAc6D,KAAK,yBAAyB0J,UAAW/C,KACvD,cAAC,GAAD,CAAc5G,OAAK,EAACC,KAAK,qCAAqC0J,UAAW/C,KACzE,cAAC,GAAD,CAAa5G,OAAK,EAACC,KAAK,qBAAqB0J,UAAWrP,IACxD,cAAC,IAAD,CAAO2F,KAAK,IAAI0J,UAAW,kBAAMW,OAAOP,SAAStC,KAAO,6BAGhE,cAAC2C,GAAD,CACIpO,MAAO,CACHuE,gBAAiB,QACjBgK,UAAW,sCACXhH,QAAS,OACTiH,UAAW,OACXC,SAAU,SACVC,cAAe,SACftN,MAAO,OACPuN,OAAQ,KAThB,SAWI,cAAC,GAAD,CACIrC,WAAY,CACR,CACIhM,KAAM,SACNyM,YAAa,iBACbL,WAAY,oDAEhB,CACIpM,KAAM,UACNyM,YAAa,iBACbL,WAAY,mCAEhB,CACIpM,KAAM,QACNyM,YAAa,iBACbL,WAAY,aC/CxCkC,IAAShG,OAAO,cAAC,GAAD,IAASsE,SAAS2B,eAAe,W","file":"static/js/main.7016f6e9.chunk.js","sourcesContent":["import { notification } from \"antd\";\n\n/**\n * Open up an Antd notification\n * @param {('error'|'warning'|'success')} type - The type of notification.\n * @param {string | import(\"react\").ReactNode} message - The main error message. It's the notification title of the notification.\n * @param {string | import(\"react\").ReactNode} description - The error description.\n */\n\nconst openNotification = (type, message, description = \"\") => {\n    if (type !== \"error\" && type !== \"warning\" && type !== \"success\") return;\n\n    notification[type]({\n        message,\n        description,\n        placement: \"bottomRight\",\n        duration: type === \"error\" ? 0 : 5,\n    });\n};\n\nexport default openNotification;\n","import React, { useState } from \"react\";\nimport { useHistory, } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport { Form, Input, Button, Card, Row, Col, Layout } from \"antd\";\nimport { LockOutlined, MailOutlined } from \"@ant-design/icons\";\n\nimport openNotification from \"../../utils/openAntdNotification\";\nimport \"./Login.css\";\n\n\nconst { Header, Content } = Layout;\n\nconst Login = () => {\n    const [isLoggingIn, setIsLoggingIn] = useState(false);\n    const history = useHistory();\n\n    const logIn = async (values) => {\n        setIsLoggingIn(true);\n        try {\n            // eslint-disable-next-line no-unused-vars\n            const res = await axios({\n                method: \"post\",\n                url: \"https://ecell.iitm.ac.in/data/cap-admin/login\",\n                data: values,\n                withCredentials: true,\n                credentials: 'include'\n            });\n            setIsLoggingIn(false);\n            localStorage.setItem(\"user\", JSON.stringify(res.data.data))\n            history.push(\"/cap-p/admin-dashboard\");\n        } catch (error) {\n            setIsLoggingIn(false);\n            console.log(\"error\", error);\n            const errMsg = error.response ? error.response.data.msg : error.message;\n            openNotification(\"error\", errMsg);\n        }\n    };\n\n    return (\n        <>\n            <Header style={{ background: \"#07188B \", textAlign: \"center\" }}>\n                <h1 style={{ color: \"#fefefe\" }}>Campus Ambassador Program</h1>\n            </Header>\n            <Content className=\"login-container\">\n                <Card bordered={true} className=\"loginCard\">\n                    <h1 className=\"title\">Login</h1>\n                    <Form name=\"login\" onFinish={logIn} layout=\"vertical\" scrollToFirstError size=\"large\">\n                        <Form.Item\n                            name=\"email\"\n                            label=\"E-Mail\"\n                            rules={[\n                                {\n                                    type: \"email\",\n                                    message: \"The input is not valid E-mail!\",\n                                },\n                                {\n                                    required: true,\n                                    message: \"Please input your E-mail!\",\n                                },\n                            ]}>\n                            <Input prefix={<MailOutlined className=\"site-form-item-icon\" />} placeholder=\"E-Mail\" />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"password\"\n                            label=\"Password \"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Please input your Password.\",\n                                },\n                            ]}\n                        >\n                            <Input\n                                prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />\n                        </Form.Item>\n\n\n                        <Row>\n                            <Col span={24}>\n                                <Form.Item>\n                                    <Button\n                                        style={{ width: \"100%\" }}\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        loading={isLoggingIn}>\n                                        Login\n                                    </Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Card>\n            </Content>\n        </>\n    );\n};\n\nexport default Login;\n","import React, { useState, useEffect, useRef } from 'react'\nimport \"./AdminDashboard.css\"\n\nimport { Layout, Breadcrumb, Row, Col, Typography, Card, Modal, Button, Divider, Spin, Avatar, InputNumber, Form } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport { Route, Link, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport Axios from 'axios';\nimport openNotification from '../../utils/openAntdNotification';\n\nconst { Title } = Typography\n\nconst axios = Axios.create({\n    baseURL: \"https://ecell.iitm.ac.in/data\",\n    withCredentials: true,\n});\n\nfunction titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n        // You do not need to check if i is larger than splitStr length, as your for does that for you\n        // Assign it back to the array\n        splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    // Directly return the joined string\n    return splitStr.join(' ');\n}\n\nfunction Ambassador(props) {\n    const { task, ambassador } = props\n    const pointsRef = useRef(null)\n    const [points, setPoints] = useState(ambassador.points)\n    const [avenues, setAvenues] = useState([])\n    const [visible, setVisible] = useState(false);\n    const [modalAvenue, setModalAvenue] = useState()\n\n    const getAvenues = async (task, ambassador) => {\n        const res = await axios.get(\"/cap-admin/admin/task/ambassador/submissions\", {\n            params: { taskId: task._id, ambassadorId: ambassador.ambassadorId }\n        })\n        await setAvenues(res.data.data)\n    }\n\n    useEffect(() => {\n        getAvenues(task, ambassador)\n\n    }, [])\n\n    const handleSubmit = async (input) => {\n        if(input < points){\n            openNotification(\"warning\", \"Value to be updated must be greater than current value\")\n        }\n        else{\n\n     \n        const res = await axios.post(\"/cap-admin/admin/task/ambassador/submissions/update-points\", { points: input, ambassadorId: ambassador.ambassadorId })\n        const updatedPoints = res.data.data\n        setPoints(updatedPoints)\n    }\n    }\n\n    return (\n        <div>\n            <Router>\n                <Switch>\n                    <Route exact path={`/cap-p/admin-dashboard/${task._id}/${ambassador.ambassadorId}` || `/cap-p/admin-dashboard/${task._id}/${ambassador.ambassadorId}/`}>\n                        <Breadcrumb style={{ margin: '16px 0' }}>\n                            <Breadcrumb.Item>Home</Breadcrumb.Item>\n                            <Breadcrumb.Item>{task.taskName}</Breadcrumb.Item>\n                            <Breadcrumb.Item>{ambassador.name}</Breadcrumb.Item>\n\n                        </Breadcrumb>\n                        <div className=\"site-layout-content\">\n                            <Title level={3}> Submissions by </Title>\n                            <Row>\n                                <Col span={8}>\n\n                                    <Avatar src={ambassador.avatarURL} style={{ backgroundColor: \"forestgreen\" }} size={80}>\n                                        <UserOutlined size={80} />\n                                    </Avatar>\n\n                                </Col>\n                                <Col>\n                                    <Row>\n                                        <Title level={3}>\n                                            {ambassador.name}\n                                        </Title>\n                                    </Row>\n                                    <Row>\n\n                                        <Title level={5} style={{ color: \"gray\" }}>\n                                            {ambassador.collegeName}\n                                        </Title>\n                                    </Row>\n                                    <Row>\n\n                                        <Title level={5} style={{ color: \"gray\" }}>\n                                            {ambassador.email}\n                                        </Title>\n                                    </Row>\n                                </Col>\n                            </Row>\n                            <Row>\n                                {\n                                    avenues.length ? (avenues.map(avenue => {\n                                        return (<Col>\n                                            <Card title={titleCase(avenue.avenue)} style={{ width: 2000 }} extra={<a onClick={async () => {\n                                                await setModalAvenue(avenue)\n                                                setVisible(true)\n                                            }} >View Submissions</a>} style={{ width: 300 }}>\n                                                <Row>\n                                                    <Col span={20}>\n                                                        No. of Submissions:\n                        </Col>\n                                                    <Col span={4}>\n                                                        {avenue.urls.length}\n                                                    </Col>\n                                                </Row>\n                                            </Card>\n                                        </Col>\n                                        )\n                                    })) : <Row justify=\"center\">\n                                            <Divider />\n                                            <Spin size=\"large\" />\n                                        </Row>\n                                }\n                            </Row>\n                            <Divider />\n                            <Row justify=\"center\">\n                                <Title level={4}>Current Points: {points}</Title>\n                            </Row>\n                            <Row justify=\"center\">\n                                <Form\n                                    layout=\"horizontal\"\n                                >\n                                    <Form.Item >\n                                        <Row justify=\"center\">\n                                            <Title level={3}>\n                                                Update Points:</Title>\n                                        </Row>\n                                        <Row justify=\"center\">\n                                            <InputNumber ref={pointsRef} defaultValue={points} min={points}\n                                              />\n                                        </Row>\n                                    </Form.Item>\n                                    <Form.Item >\n                                        <Row justify=\"center\">\n                                            <Button type=\"primary\" onClick={() => handleSubmit(pointsRef.current.currentValue)}>Update</Button>\n                                        </Row>\n                                    </Form.Item>\n                                </Form>\n                            </Row>\n                            <Modal\n                                title=\"Submissions\"\n                                centered\n                                visible={visible}\n                                onOk={() => setVisible(false)}\n                                onCancel={() => setVisible(false)}\n                                width={1000}\n                                destroyOnClose={true}\n\n                            >\n\n                                {\n                                    modalAvenue ? modalAvenue.urls.map(url => {\n                                        return <div style={{ height: 1200, backgroundColor: \"silver\" }}>\n                                            <iframe\n                                                alt={url}\n                                                width=\"100%\"\n                                                height=\"100%\"\n                                                src={url}\n\n                                            ></iframe>\n\n                                        </div>\n                                    }) : null\n                                }\n\n                            </Modal>\n\n                        </div>\n                    </Route>\n                </Switch>\n            </Router>\n        </div>\n    )\n}\n\nexport default Ambassador\n","import React, { useState, useEffect, useRef, } from 'react'\nimport \"./AdminDashboard.css\"\n\nimport { Route, Link, Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nimport {  Breadcrumb, Row, Col, Typography, Table, Input, Space, Button, Spin, Divider } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined, UserOutlined } from '@ant-design/icons';\n\nimport Axios from 'axios';\nimport Ambassador from './Ambassador';\nimport Avatar from 'antd/lib/avatar/avatar';\n\nimport useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\n\nconst { Title } = Typography\n\nconst axios = Axios.create({\n  baseURL: \"https://ecell.iitm.ac.in/data\",\n  withCredentials: true,\n});\n\n\nfunction Task(props) {\n  const [ambassadors, setAmbassadors] = useState([])\n  const myref = useRef(null)\n  const screen = useBreakpoint();\n  const [loading, setLoading] = useState(false)\n  const [searchState, setSearchState] = useState({\n    searchText: '',\n    searchedColumn: '',\n  })\n\n  const [sortState, setSortState] = useState({\n    filteredInfo: null,\n    sortedInfo: null,\n  })\n\n  const handleChange = (pagination, filters, sorter) => {\n    console.log('Various parameters', pagination, filters, sorter);\n    setSortState({\n      ...sortState,\n\n      sortedInfo: sorter,\n    });\n  };\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={myref}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{ width: 188, marginBottom: 8, display: 'block' }}\n        />\n        <Space>\n          <Button\n            type=\"primary\"\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n            icon={<SearchOutlined />}\n            size=\"small\"\n            style={{ width: 90 }}\n          >\n            Search\n          </Button>\n          <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n            Reset\n          </Button>\n        </Space>\n      </div>\n    ),\n    filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => {\n      return record[dataIndex]\n        ? record.name.toLowerCase().includes(value.toLowerCase())\n        : ''\n    },\n    onFilterDropdownVisibleChange: visible => {\n      if (visible) {\n        setTimeout(() => myref.current.select(), 100);\n      }\n    },\n    render: text =>\n      searchState.searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n          searchWords={[searchState.searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : ''}\n        />\n      ) : (\n          text\n        ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchState({ searchText: '' });\n  };\n  const { task } = props\n\n\n  const getAmbassadors = async (task) => {\n    setLoading(true)\n    const res = await axios.get(\"/cap-admin/admin/task/ambassadors\", {\n      params: { taskId: task._id }\n    })\n    await setAmbassadors(res.data.data)\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    getAmbassadors(task)\n  }, [])\n\n  let i = 0\n  var dataSource = ambassadors ? ambassadors.map(ambassador => {\n    if (ambassador) {\n      i++\n      var avenueList = \"\"\n      const concatinater = ambassador ? ambassador.avenues.map(avenue => {\n        avenueList = avenueList.concat(titleCase(avenue), \" \")\n      }) : \"\"\n      return { ...ambassador, key: String(i), avenueList: ambassador ? avenueList : \"\" }\n    }\n\n  }) : []\n\n\n  let { sortedInfo, filteredInfo } = sortState;\n  sortedInfo = sortedInfo || {};\n  filteredInfo = filteredInfo || {};\n  const columns = [\n    {\n      title: '',\n\n      key: 'avatarUrl',\n      render: (text, ambassador) => (\n        <Space size=\"small\">\n          <Avatar src={ambassador.avatarURL} style={{ backgroundColor: \"green\" }}>\n            <UserOutlined />\n          </Avatar>\n        </Space>\n      )\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      \n      ...getColumnSearchProps('name'),\n    },\n\n    {\n      title: 'Avenue',\n      dataIndex: 'avenueList',\n      key: 'avenueList',\n      filters: [\n        { text: 'Linkedin', value: 'Linkedin' },\n        { text: 'Whatsapp', value: 'Whatsapp' },\n        { text: 'Instagram', value: 'Instagram' },\n        { text: 'Email', value: 'Email' },\n        { text: 'Others', value: 'Others' },\n      ],\n      onFilter: (value, record) => record.avenueList.indexOf(value) === 0,\n    },\n    {\n      title: 'Points',\n      dataIndex: 'points',\n      key: 'points',\n      sorter: (a, b) => a.points - b.points,\n      sortOrder: sortedInfo.columnKey === 'points' && sortedInfo.order,\n      ellipsis: true,\n\n    },\n    {\n      title: 'Submissions',\n      dataIndex: 'numOfDocs',\n      key: 'numOfDocs',\n      sorter: (a, b) => a.numOfDocs - b.numOfDocs,\n      sortOrder: sortedInfo.columnKey === 'numOfDocs' && sortedInfo.order,\n      ellipsis: true,\n    },\n    {\n      title: 'Action',\n      key: 'action',\n      render: (text, ambassador) => (\n        <Space size=\"middle\">\n          <Link to={`/cap-p/admin-dashboard/${task._id}/${ambassador.ambassadorId}`}>View Submissions</Link>\n        </Space>\n      ),\n    },\n  ];\n\n  const columnsForMobile = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      ...getColumnSearchProps('name'),\n      render: (text, ambassador) => (\n        <Space size=\"middle\">\n          <Link to={`/cap-p/admin-dashboard/${task._id}/${ambassador.ambassadorId}`}>{ambassador.name}</Link>\n        </Space>),\n      width: 100,\n      align: \"center\",\n    },\n    {\n      title: 'Submissions',\n      dataIndex: 'numOfDocs',\n      key: 'numOfDocs',\n      sorter: (a, b) => a.numOfDocs - b.numOfDocs,\n      sortOrder: sortedInfo.columnKey === 'numOfDocs' && sortedInfo.order,\n      ellipsis: true,\n      width: 65,\n      align: \"center\",\n    },\n  ];\n\n\n\n  function titleCase(str) {\n    var splitStr = str.toLowerCase().split(' ');\n    for (var i = 0; i < splitStr.length; i++) {\n      // You do not need to check if i is larger than splitStr length, as your for does that for you\n      // Assign it back to the array\n      splitStr[i] = splitStr[i].charAt(0).toUpperCase() + splitStr[i].substring(1);\n    }\n    // Directly return the joined string\n    return splitStr.join(' ');\n  }\n\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route exact path={`/cap-p/admin-dashboard/${task._id}` || `/cap-p/admin-dashboard/${task._id}/`}>\n            <Breadcrumb style={{ margin: '16px 0' }}>\n              <Breadcrumb.Item>Home</Breadcrumb.Item>\n              <Breadcrumb.Item>{task.taskName}</Breadcrumb.Item>\n            </Breadcrumb>\n            <div className=\"site-layout-content\">\n              <Title level={3}>Ambassadors who have completed the task : {task.taskName} </Title>\n              <Row>\n                <Col span={24}>\n                  {\n                    screen.md ? <Table loading={loading} dataSource={dataSource} columns={columns} onChange={handleChange} expandable={{\n                      expandedRowRender: (ambassador => {\n                        return <Row>\n                          <Col span={12}>\n                            <Avatar src={ambassador.avatarURL} style={{ backgroundColor: \"forestgreen\" }} size={80}>\n                              <UserOutlined size={80} />\n                            </Avatar>\n                          </Col>\n                          <Col>\n                            <Row>\n                              <Title level={3}>\n                                {ambassador.name}\n                              </Title>\n                            </Row>\n                            <Row>\n                              <Title level={5} style={{ color: \"gray\" }}>\n                                {ambassador.collegeName}\n                              </Title>\n                            </Row>\n                            <Row>\n                              <Title level={5} style={{ color: \"gray\" }}>\n                                {ambassador.email}\n                              </Title>\n                            </Row>\n                          </Col>\n                        </Row>\n\n                      }\n                      ),\n                    }} size=\"small\" />\n                      :\n                      <Table dataSource={dataSource} columns={columnsForMobile} onChange={handleChange}\n                       size=\"small\" />\n                  }\n                </Col>\n              </Row>\n            </div>\n          </Route>\n          {\n            ambassadors.length ? (ambassadors.map(ambassador => {\n\n              if (ambassador) {\n                return (\n                  <Route path={`/cap-p/admin-dashboard/${task._id}/${ambassador.ambassadorId}` || `/cap-p/admin-dashboard/${task._id}/${ambassador.ambassadorId}/`}>\n                    <Ambassador task={task} ambassador={ambassador} ></Ambassador>\n                  </Route>\n                )\n              }\n            })) : <Row justify=\"center\">\n                <Divider />\n                <Spin size=\"large\" />\n              </Row>\n          }\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default Task\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\nimport \"./AdminDashboard.css\"\n\nimport { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\n\nimport { Layout, Row, Col, Typography, Table, Input, Space, Button, } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { SearchOutlined, UserOutlined } from '@ant-design/icons';\n\nimport Axios from 'axios';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\n\nconst { Title } = Typography\nconst axios = Axios.create({\n    baseURL: \"https://ecell.iitm.ac.in/data\",\n    withCredentials: true,\n});\n\n\nfunction Leaderboard() {\n    const [ambassadors, setAmbassadors] = useState([])\n    const myref = useRef(null)\n    const screen = useBreakpoint();\n    const [loading, setLoading] = useState(false)\n    const [searchState, setSearchState] = useState({\n        searchText: '',\n        searchedColumn: '',\n    })\n\n\n    const [sortState, setSortState] = useState({\n        filteredInfo: null,\n        sortedInfo: null,\n    })\n\n    const handleChange = (pagination, filters, sorter) => {\n        console.log('Various parameters', pagination, filters, sorter);\n        setSortState({\n            ...sortState,\n\n            sortedInfo: sorter,\n        });\n    };\n\n\n\n\n    const getColumnSearchProps = dataIndex => ({\n        filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n            <div style={{ padding: 8 }}>\n                <Input\n                    ref={myref}\n                    placeholder={`Search ${dataIndex}`}\n                    value={selectedKeys[0]}\n                    onChange={e => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n                    onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                    style={{ width: 188, marginBottom: 8, display: 'block' }}\n                />\n                <Space>\n                    <Button\n                        type=\"primary\"\n                        onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\n                        icon={<SearchOutlined />}\n                        size=\"small\"\n                        style={{ width: 90 }}\n                    >\n                        Search\n          </Button>\n                    <Button onClick={() => handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n                        Reset\n          </Button>\n                </Space>\n            </div>\n        ),\n        filterIcon: filtered => <SearchOutlined style={{ color: filtered ? '#1890ff' : undefined }} />,\n        onFilter: (value, record) => {\n            return record[dataIndex]\n                ? record[dataIndex].toLowerCase().includes(value.toLowerCase())\n                : ''\n        },\n        onFilterDropdownVisibleChange: visible => {\n            if (visible) {\n                setTimeout(() => myref.current.select(), 100);\n            }\n        },\n        render: text =>\n            searchState.searchedColumn === dataIndex ? (\n                <Highlighter\n                    highlightStyle={{ backgroundColor: '#ffc069', padding: 0 }}\n                    searchWords={[searchState.searchText]}\n                    autoEscape\n                    textToHighlight={text ? text.toString() : ''}\n                />\n            ) : (\n                    text\n                ),\n    });\n\n    const handleSearch = (selectedKeys, confirm, dataIndex) => {\n        confirm();\n        setSearchState({\n            searchText: selectedKeys[0],\n            searchedColumn: dataIndex,\n        });\n    };\n\n    const handleReset = clearFilters => {\n        clearFilters();\n        setSearchState({ searchText: '' });\n    };\n\n    const getAmbassadors = async (task) => {\n        setLoading(true)\n        const res = await axios.get(\"/cap-admin/admin/all-ambassadors\")\n        await setAmbassadors(res.data.data)\n        setLoading(false)\n    }\n\n    useEffect(() => {\n        getAmbassadors()\n\n\n    }, [])\n\n    const usersPointsSorted = [...ambassadors].sort((a, b) => b.points - a.points);\n    const dataSource = usersPointsSorted.map((ambassador, i) => ({ ...ambassador, rank: i + 1 }));\n\n    let { sortedInfo, filteredInfo } = sortState;\n    sortedInfo = sortedInfo || {};\n    filteredInfo = filteredInfo || {};\n    const columns = [\n\n        {\n            title: '',\n\n            key: 'avatarUrl',\n            width: \"10%\",\n            render: (text, ambassador) => (\n                <Space size=\"small\">\n                    <Avatar src={ambassador.avatarURL} style={{ backgroundColor: \"green\" }}>\n                        <UserOutlined />\n                    </Avatar>\n\n                </Space>\n            )\n        },\n        {\n            title: 'Rank',\n            dataIndex: 'rank',\n            key: 'rank',\n            width: \"10%\",\n            sorter: (a, b) => a.rank - b.rank,\n            sortOrder: sortedInfo.columnKey === 'points' && sortedInfo.order,\n            ellipsis: true,\n\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            width: \"30%\",\n            ...getColumnSearchProps('name'),\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            key: 'email',\n            ...getColumnSearchProps('email'),\n\n            width: \"20%\",\n            align: \"center\",\n        },\n        {\n            title: 'Institution',\n            dataIndex: 'collegeName',\n            key: 'collegeName',\n            ...getColumnSearchProps('collegeName'),\n\n            width: \"30%\",\n            align: \"center\",\n        },\n\n        {\n            title: 'Points',\n            dataIndex: 'points',\n            key: 'points',\n            sorter: (a, b) => a.points - b.points,\n            sortOrder: sortedInfo.columnKey === 'points' && sortedInfo.order,\n            width: \"10%\",\n            ellipsis: true,\n\n        },\n    ];\n\n    const columnsForMobile = [\n\n        {\n            title: 'Rank',\n            dataIndex: 'rank',\n            key: 'rank',\n            width: \"20%\",\n            sorter: (a, b) => a.rank - b.rank,\n            sortOrder: sortedInfo.columnKey === 'points' && sortedInfo.order,\n            ellipsis: true,\n            align: \"center\"\n\n        },\n\n        {\n            title: 'Name',\n            dataIndex: 'name',\n            key: 'name',\n            ...getColumnSearchProps('name'),\n\n            width: \"40%\",\n            align: \"center\",\n        },\n\n        {\n            title: 'Points',\n            dataIndex: 'points',\n            key: 'points',\n            sorter: (a, b) => a.points - b.points,\n            sortOrder: sortedInfo.columnKey === 'points' && sortedInfo.order,\n            ellipsis: true,\n            width: \"20%\",\n            align: \"center\"\n\n        },\n    ];\n\n    return (\n        <div>\n\n            <Router>\n\n                <Switch>\n                    <Route exact path={`/cap-p/admin-dashboard/leaderboard` || `/cap-p/admin-dashboard/leaderboard`}>\n\n                        <div className=\"site-layout-content\">\n                            <Title level={3}>Leaderboard </Title>\n\n\n                            <Row>\n                                <Col span={24}>\n                                    {\n                                        screen.md ? <Table loading={loading} dataSource={dataSource} columns={columns} onChange={handleChange} expandable={{\n                                            expandedRowRender: (ambassador => {\n                                                return <Row>\n                                                    <Col span={12}>\n\n                                                        <Avatar src={ambassador.avatarURL} style={{ backgroundColor: \"forestgreen\" }} size={80}>\n                                                            <UserOutlined size={80} />\n                                                        </Avatar>\n\n                                                    </Col>\n                                                    <Col>\n                                                        <Row>\n                                                            <Title level={3}>\n                                                                {ambassador.name}\n                                                            </Title>\n                                                        </Row>\n                                                        <Row>\n\n                                                            <Title level={5} style={{ color: \"gray\" }}>\n                                                                {ambassador.collegeName}\n                                                            </Title>\n                                                        </Row>\n                                                        <Row>\n\n                                                            <Title level={5} style={{ color: \"gray\" }}>\n                                                                {ambassador.email}\n                                                            </Title>\n                                                        </Row>\n\n\n                                                    </Col>\n                                                </Row>\n\n                                            }\n                                            ),\n                                        }} size=\"small\" />\n                                            :\n                                            screen.md ? <Table dataSource={dataSource} columns={columnsForMobile} onChange={handleChange}\n                                                expandable={{\n                                                    expandedRowRender: (ambassador => {\n                                                        return <Row>\n                                                            <Col span={12}>\n\n                                                                <Avatar src={ambassador.avatarURL} style={{ backgroundColor: \"forestgreen\" }} size={80}>\n                                                                    <UserOutlined />\n                                                                </Avatar>\n\n                                                            </Col>\n                                                            <Col>\n                                                                <Row>\n                                                                    <Title level={3}>\n                                                                        {ambassador.name}\n                                                                    </Title>\n                                                                </Row>\n                                                                <Row>\n\n                                                                    <Title level={5} style={{ color: \"gray\" }}>\n                                                                        {ambassador.collegeName}\n                                                                    </Title>\n                                                                </Row>\n                                                                <Row>\n\n                                                                    <Title level={5} style={{ color: \"gray\" }}>\n                                                                        {ambassador.email}\n                                                                    </Title>\n                                                                </Row>\n\n\n                                                            </Col>\n\n                                                        </Row>\n\n                                                    }\n                                                    ),\n\n                                                }}\n                                                size=\"small\" /> :\n                                                <Table dataSource={dataSource} columns={columnsForMobile} onChange={handleChange}\n                                                    expandable={{\n                                                        width: \"5%\",\n                                                        expandedRowRender: (ambassador => {\n                                                            return <Row>\n                                                                <Col>\n\n                                                                    <Row>\n\n                                                                        <Title level={5} style={{ color: \"gray\", fontSize: 10 }}>\n                                                                            {ambassador.collegeName}\n                                                                        </Title>\n                                                                    </Row>\n                                                                    <Row>\n\n                                                                        <Title level={5} style={{ color: \"gray\", fontSize: 10 }}>\n                                                                            {ambassador.email}\n                                                                        </Title>\n                                                                    </Row>\n                                                                </Col>\n                                                            </Row>\n                                                        }\n                                                        ),\n                                                        rowExpandable: ambassador => ambassador.name !== 'Not Expandable',\n                                                    }}\n                                                    size=\"small\" />\n                                    }\n                                </Col>\n                            </Row>\n\n\n                        </div>\n\n                    </Route>\n\n                </Switch>\n            </Router>\n\n        </div>\n\n\n\n    )\n}\n\nexport default Leaderboard\n","import React, { useState, useEffect, } from 'react'\nimport \"./AdminDashboard.css\"\nimport { Layout, Breadcrumb, Row, Col, Typography, Card, Divider, Spin, Button } from 'antd';\nimport { LogoutOutlined, HomeOutlined, RocketOutlined } from '@ant-design/icons';\nimport Axios from 'axios';\n\nimport { Route, Link, Switch, BrowserRouter as Router, useHistory } from \"react-router-dom\";\n\nimport Task from \"./Task\"\nimport Leaderboard from './Leaderboard';\nimport openNotification from \"../../utils/openAntdNotification\";\n\nconst { Title } = Typography\n\nconst axios = Axios.create({\n  baseURL: \"https://ecell.iitm.ac.in/data\",\n  withCredentials: true,\n});\n\nconst { Header, Content } = Layout;\n\nfunction AdminDashboard() {\n  const history = useHistory()\n  const [tasks, setTasks] = useState({})\n\n  const handleLogout = async () => {\n    try {\n      console.log(\"logout\")\n      await axios.get(\"/cap-admin/admin/logout\", { withCredentials: true });\n      history.push(\"/cap-p/admin/login\");\n    } catch (error) {\n      const errMsg = error.response ? error.response.data.msg : error.message;\n      openNotification(\"error\", errMsg);\n    }\n  };\n\n  const getTasks = async () => {\n    const res = await axios.get(\"/cap-admin/admin/tasks\", { withCredentials: true, credentials: 'include' })\n    await setTasks(res.data.data)\n\n  }\n\n  useEffect(() => {\n    getTasks()\n  }, [])\n\n  return (\n    <div>\n      <Layout className=\"layout\">\n        <Header>\n          <div className=\"logo\" />\n          <Row>\n            <Col\n              xs={{ span: 8, offset: 0 }}\n              sm={{ span: 16, offset: 0 }}\n              md={{ span: 19, offset: 0 }}\n              lg={{ span: 19, offset: 0 }}>\n              <Title\n                style={{\n                  paddingTop: 10,\n                  color: \"white\",\n                  textAlign: \"left\",\n                  fontSize: 35,\n                  fontFamily: \"Andika\",\n                  fontWeight: 30,\n                }}>\n                CAP\n                        </Title>\n            </Col>\n            <Col>\n              <Button type=\"primary\" shape=\"circle\" size=\"large\" ><a href=\"/cap-p/admin-dashboard\"><HomeOutlined /></a></Button>\n            _\n            <Button type=\"primary\" shape=\"circle\" size=\"large\" ><a href=\"/cap-p/admin-dashboard/leaderboard\"><RocketOutlined /></a></Button>\n            _\n            <Button type=\"primary\" shape=\"circle\" size=\"large\" ><LogoutOutlined onClick={handleLogout} /></Button>\n            </Col>\n          </Row>\n\n        </Header>\n        <Content style={{ padding: '0 50px', minHeight: 775 }}>\n          <Router>\n            <Switch>\n              <Route exact path={`/cap-p/admin-dashboard/` || `/cap-p/admin-dashboard`}>\n                <Breadcrumb style={{ margin: '16px 0' }}>\n                  <Breadcrumb.Item>Home</Breadcrumb.Item>\n                </Breadcrumb>\n                <div className=\"site-layout-content\">\n                  <Title>Tasks</Title>\n                  <Row>\n                    {\n                      tasks.length ? (tasks.map(task => {\n                        return (<div><Col>\n                          <Card title={task.taskName} extra={<Link to={`/cap-p/admin-dashboard/${task._id}`}>Go To Task</Link>} style={{ width: 300 }}>\n                            <Row>\n                              <Col span={20}>\n                                No. of Ambassadors:\n                        </Col>\n                              <Col span={4}>\n                                {task.ambassadorIds.length}\n                              </Col>\n                            </Row>\n                          </Card>\n                        </Col>\n                        </div>)\n                      })) : <Row justify=\"center\">\n                          <Divider />\n                          <Spin size=\"large\" />\n                        </Row>\n                    }\n\n                  </Row>\n\n                </div>\n              </Route>\n              \n              {\n                tasks.length ? (tasks.map(task => {\n                  return (\n                    <Route path={`/cap-p/admin-dashboard/${task._id}`}>\n                      <Task task={task}></Task>\n                    </Route>\n                  )\n                })) : <Row justify=\"center\">\n                    <Divider />\n                    <Spin size=\"large\" />\n                  </Row>\n              }\n              <Route exact path=\"/cap-p/admin-dashboard/leaderboard\" >\n\n                <Leaderboard></Leaderboard>\n              </Route>\n            </Switch>\n          </Router>\n        </Content>\n      </Layout>\n    </div>\n  )\n}\n\nexport default AdminDashboard\n\n\n","const layouts = {\n    halfInLarge: {\n        xs: { span: 24 },\n        sm: { span: 24 },\n        md: { span: 12 },\n        lg: { span: 12 },\n    },\n    oneFourthInLarge: {\n        xs: { span: 24 },\n        sm: { span: 24 },\n        md: { span: 6 },\n        lg: { span: 6 },\n    },\n    threeFourthInLarge: {\n        xs: { span: 24 },\n        sm: { span: 24 },\n        md: { span: 18 },\n        lg: { span: 18 },\n    },\n    oneThirdInLarge: {\n        xs: { span: 24 },\n        sm: { span: 24 },\n        md: { span: 8 },\n        lg: { span: 8 },\n    },\n};\n\nexport default layouts;\n","import React from \"react\";\nimport { Row, Col, Grid, Divider, Popover, Typography } from \"antd\";\nimport { WhatsAppOutlined } from \"@ant-design/icons\";\nimport layouts from \"../utils/antd-layouts\";\n\nconst { useBreakpoint } = Grid;\n\nconst ECellFooter = ({ developers }) => {\n    const screen = useBreakpoint();\n    const developerDetails = (\n        <div>\n            {developers.map((developer) => (\n                <div key={developer.whatsappNum}>\n                    <Typography.Link href={developer.profileURL} target=\"blank\">\n                        {developer.name}\n                    </Typography.Link>{\" \"}\n                    <WhatsAppOutlined /> :{\" \"}\n                    <Typography.Text copyable={{ tooltips: false }}>{developer.whatsappNum}</Typography.Text>\n                </div>\n            ))}\n        </div>\n    );\n    return (\n        <Row>\n            <Col\n                {...layouts.oneFourthInLarge}\n                offset={(screen?.md || screen?.lg) && 3}\n                style={!(screen?.lg || screen?.md) && { textAlign: \"center\" }}>\n                <div>\n                    &copy;Developed by {!(screen?.lg || screen?.md) && <br />}\n                    <strong>Web Operations | E-Cell | IIT Madras.</strong>\n                    <br />\n                    All Rights Reserved.\n                </div>\n            </Col>\n\n            {!(screen?.lg || screen?.md) && <Divider />}\n\n            <Col\n                {...layouts.oneFourthInLarge}\n                offset={(screen?.md || screen?.lg) && 6}\n                style={!(screen?.lg || screen?.md) && { textAlign: \"center\" }}>\n                <div>\n                    <span>For issues related to the website, </span>\n                    <Popover content={developerDetails}>\n                        <Typography.Link>contact us.</Typography.Link>\n                    </Popover>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default ECellFooter;\n","const getCookieToken = () => {\n    \n    if (!document.cookie) return null;\n\n    const token = document.cookie\n        .split(\";\")\n        .filter((str) => str.trim().startsWith(\"ECELL_CAP_LOGGED_IN\"))[0];\n\n    if (!token) return null;\n\n    const tokenVal = token.split(\"=\")[1];\n    return tokenVal;\n};\n\nexport default getCookieToken;","import { Route, Redirect } from \"react-router-dom\";\nimport getCookieToken from \"../utils/getCookieToken\";\n\nconst PrivateRoute = (props) => {\n    const { children, component: Component, redirectTo, ...rest } = props;\n    const userType = getCookieToken();\n    const isLoggedIn = userType === \"user\";\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) => {\n                if (isLoggedIn) {\n                    return children || <Component />;\n                } else {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: redirectTo,\n                                state: { from: location },\n                            }}\n                        />\n                    );\n                }\n            }}\n        />\n    );\n};\n\nconst PublicRoute = (props) => {\n    const { children, component: Component, ...rest } = props;\n    const userType = getCookieToken();\n    const isLoggedIn = userType === \"student\";\n\n    return (\n        <Route\n            {...rest}\n            render={() => {\n                if (isLoggedIn) {\n                    return <Redirect to=\"/cap-p/dashboard\" />;\n                } else {\n                    return children || <Component />;\n                }\n            }}\n        />\n    );\n};\n\nexport { PrivateRoute, PublicRoute };\n","import { Route, Switch, BrowserRouter as Router } from \"react-router-dom\";\nimport { Layout } from \"antd\";\n\nimport Login from \"./views/Login/Login\";\n\nimport AdminDashboard from \"./views/AdminDashboard/AdminDashboard.jsx\"\nimport ECellFooter from \"./common/ECellFooter\";\n\nimport \"./App.less\";\nimport { PrivateRoute, PublicRoute } from \"./common/SpecialRoutes\";\n\nconst { Footer } = Layout;\n\nconst App = () => {\n    return (\n        <Layout className=\"App\">\n            <Router>\n                <Switch>\n\n                    <PrivateRoute path=\"/cap-p/admin-dashboard\" component={AdminDashboard} />\n                    <PrivateRoute exact path=\"/cap-p/admin-dashboard/leaderboard\" component={AdminDashboard} />\n                    <PublicRoute exact path=\"/cap-p/admin/login\" component={Login} />\n                    <Route path=\"*\" component={() => window.location.href = \"/cap-p/admin/login\"} />\n                </Switch>\n            </Router>\n            <Footer\n                style={{\n                    backgroundColor: \"white\",\n                    boxShadow: \"0px -1px 20px rgba(85, 85, 85, 0.2)\",\n                    padding: \"20px\",\n                    marginTop: \"1rem\",\n                    position: \"sticky\",\n                    verticalAlign: \"bottom\",\n                    width: \"100%\",\n                    zIndex: 100,\n                }}>\n                <ECellFooter\n                    developers={[\n                        {\n                            name: \"Ashish\",\n                            whatsappNum: \"+91 9983321407\",\n                            profileURL: \"https://www.linkedin.com/in/ashish-kumar-shroti/\",\n                        },\n                        {\n                            name: \"Abhijit\",\n                            whatsappNum: \"+91 8895219514\",\n                            profileURL: \"https://github.com/abhijit-hota\",\n                        },\n                        {\n                            name: \"Harsh\",\n                            whatsappNum: \"+91 9345105302\",\n                            profileURL: \"\",\n                        },\n                    ]}\n                />\n            </Footer>\n        </Layout>\n    );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}